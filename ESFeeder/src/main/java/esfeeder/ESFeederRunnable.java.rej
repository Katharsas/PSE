diff a/ESFeeder/src/main/java/esfeeder/ESFeederRunnable.java b/ESFeeder/src/main/java/esfeeder/ESFeederRunnable.java	(rejected hunks)
@@ -1,4 +1,5 @@
 package esfeeder;
+
 import java.io.File;
 import java.nio.file.Path;
 import java.util.List;
@@ -7,39 +8,36 @@
  *
  * @author jmothes
  */
- 
 public class ESFeederRunnable implements Runnable {
 
-	private NewArticleManager newArticleManager;
-	private DuplicateManager duplicateManager;
-
-	@Override
-	public void run() {
-		newArticleManager = new NewArticleManager();
-		List<ArticleId> newIds = newArticleManager.manageArticles();
-		duplicateManager = new DuplicateManager();
-	}
+    private NewArticleManager newArticleManager;
+    private DuplicateManager duplicateManager;
 
+    @Override
+    public void run() {
+        newArticleManager = new NewArticleManager();
+        List<ArticleId> newIds = newArticleManager.manageArticles();
+        duplicateManager = new DuplicateManager();
+    }
 
-	public static void main(String[] args) {
-		System.out.println("Executing ESFeeder...");
-    	FileService fileService = new FileService();
+    public static void main(String[] args) {
+        System.out.println("Executing ESFeeder...");
+//    	FileService fileService = new FileService();
+//      Bug why no classed found??
 //      commented this to make project compile #todo refac
 //      List<Path> newArticlePaths = fileService.getSubscribedArticles(false);
 
         /*
         * Daniel's code
         * Some test and debugging code to compile and test the XmlParser class
-        */
+         */
         Article a = new Article();
         XmlParser x = new XmlParser();
-        String name_sample_file = "../Daniel_ESDemo_Crawler/data/_few/RSS973602347.xml";
-        File sample_file = new File(name_sample_file);
-        String s = x.parse(sample_file);
+
+        //String s = x.parse(sample_file);
+        String s = x.debug();
         System.out.println(s);
         System.out.println("... finished");
-                
-		
 
-	}
-}
\ No newline at end of file
+    }
+}
